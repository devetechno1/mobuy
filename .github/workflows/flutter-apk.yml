name: Build & Upload APK only if version changed

on:
  push:
    branches:
      - main

jobs:
  check_version:
    name: Check if version changed
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.check.outputs.changed }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # عشان نجيب HEAD^ ونقارنه مع HEAD

      - name: Compare version line only
        id: check
        run: |
          OLD=$(git show HEAD^:pubspec.yaml | grep '^version:' || echo "")
          NEW=$(grep '^version:' pubspec.yaml || echo "")
          echo "Old Version: $OLD"
          echo "New Version: $NEW"
          if [ "$OLD" = "$NEW" ]; then
            echo "Version did not change"
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "Version changed"
            echo "changed=true" >> $GITHUB_OUTPUT

  build:
    name: Build and Upload APK
    needs: check_version
    if: needs.check_version.outputs.changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.3'

      - name: Decode keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/upload-keystore.jks

      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=upload-keystore.jks" >> android/key.properties

      - name: Install Dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Install rclone
        run: curl https://rclone.org/install.sh | sudo bash

      - name: Upload to Google Drive
        env:
          RCLONE_CONFIG: ${{ secrets.RCLONE_CONFIG }}
        run: |
          echo "$RCLONE_CONFIG" > rclone.conf
          export RCLONE_CONFIG_PATH=$(pwd)/rclone.conf
          VERSION=$(grep '^version:' pubspec.yaml | cut -d' ' -f2 | cut -d+ -f1)
          ALIAS="${{ secrets.KEY_ALIAS }}"
          FILE_NAME="${ALIAS}_${VERSION}.apk"
          rclone copy build/app/outputs/flutter-apk/app-release.apk mydrive:اسم_الفولدر
          rclone moveto mydrive:اسم_الفولدر/app-release.apk mydrive:اسم_الفولدر/$FILE_NAME
